[gd_resource type="VisualShader" load_steps=8 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 1, 0.12549, 0.12549, 1 )

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=3]
function = 0

[sub_resource type="VisualShaderNodeScalarClamp" id=4]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=6]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=7]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 3

[resource]
code = "shader_type spatial;
render_mode diffuse_toon, specular_schlick_ggx, unshaded;




void vertex() {
// Output:0

}

void fragment() {
// Color:10
	vec3 n_out10p0 = vec3(1.000000, 0.125490, 0.125490);
	float n_out10p1 = 1.000000;

// Input:2
	float n_out2p0 = TIME;

// ScalarOp:7
	float n_in7p1 = 4.00000;
	float n_out7p0 = n_out2p0 * n_in7p1;

// ScalarFunc:3
	float n_out3p0 = sin(n_out7p0);

// ScalarOp:8
	float n_in8p1 = 1.00000;
	float n_out8p0 = n_out3p0 + n_in8p1;

// ScalarOp:9
	float n_in9p1 = 4.00000;
	float n_out9p0 = n_out8p0 / n_in9p1;

// ScalarClamp:6
	float n_in6p1 = 0.00000;
	float n_in6p2 = 1.00000;
	float n_out6p0 = clamp(n_out9p0, n_in6p1, n_in6p2);

// Output:0
	ALBEDO = n_out10p0;
	ALPHA = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -48.9497, -25 )
modes/diffuse = 4
flags/unshaded = true
nodes/fragment/0/position = Vector2( 780, 40 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( -300, 40 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( 60, 40 )
nodes/fragment/6/node = SubResource( 4 )
nodes/fragment/6/position = Vector2( 580, 40 )
nodes/fragment/7/node = SubResource( 5 )
nodes/fragment/7/position = Vector2( -120, 40 )
nodes/fragment/8/node = SubResource( 6 )
nodes/fragment/8/position = Vector2( 260, 40 )
nodes/fragment/9/node = SubResource( 7 )
nodes/fragment/9/position = Vector2( 420, 40 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 590, -65 )
nodes/fragment/connections = PoolIntArray( 6, 0, 0, 1, 2, 0, 7, 0, 7, 0, 3, 0, 3, 0, 8, 0, 8, 0, 9, 0, 9, 0, 6, 0, 10, 0, 0, 0, 6, 0, 0, 1, 2, 0, 7, 0, 7, 0, 3, 0, 3, 0, 8, 0, 8, 0, 9, 0, 9, 0, 6, 0, 10, 0, 0, 0 )
